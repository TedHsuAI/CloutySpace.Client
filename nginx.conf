# ----------------------------------------------------------------
# Nginx 設定檔 (最終完美版 - 前端專用)
# 適用於 Docker 環境，並放置於 /etc/nginx/conf.d/default.conf
# ----------------------------------------------------------------

server {
    # 監聽 80 port，這是標準的 HTTP 流量入口
    listen 80;

    # 伺服器名稱，在本機或單一容器環境下設為 localhost 即可
    server_name localhost;

    # 網站靜態檔案的根目錄，對應 Dockerfile 中複製 dist 的路徑
    root /usr/share/nginx/html;

    # 預設的入口檔案
    index index.html;

    # -------------------
    # 安全性相關標頭 (Security Headers)
    # -------------------
    # 防止網頁被嵌入到惡意的 iframe 中
    add_header X-Frame-Options "SAMEORIGIN" always;
    # 防止瀏覽器錯誤地將非 JavaScript 的內容當作 JavaScript 執行
    add_header X-Content-Type-Options "nosniff" always;
    # 啟用瀏覽器的 XSS (跨站腳本攻擊) 防護
    add_header X-XSS-Protection "1; mode=block" always;
    # 控制 Referer 標頭的發送策略，增強隱私
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    # 內容安全策略，限制資源的來源，防止惡意腳本注入
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # -------------------
    # 靜態資源快取設定
    # -------------------
    # 對於 JS, CSS, 圖片等不常變動的檔案，讓瀏覽器快取一年
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    # -------------------
    # 單頁應用 (SPA) 路由設定
    # -------------------
    # 這是讓 React Router 正常運作的關鍵
    # 所有找不到對應檔案的路徑請求，都回傳 index.html，交由前端路由處理
    location / {
        try_files $uri $uri/ /index.html;
    }

    # (可選) 針對 index.html，明確告知瀏覽器不要快取
    # 確保使用者總能拿到最新的應用程式入口，由入口再去載入有快取的資源檔
    location = /index.html {
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    # -------------------
    # 健康檢查端點 (可選)
    # -------------------
    # 提供一個簡單的端點，讓外部監控服務可以確認 Nginx 是否存活
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # -------------------
    # 錯誤頁面設定
    # -------------------
    # 當使用者訪問不存在的頁面時，也回傳 index.html，交由前端路由處理 404 頁面
    error_page 404 /index.html;
}